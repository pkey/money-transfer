/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package com.revolut.task

import spock.lang.Specification
import java.math.BigDecimal
import com.revolut.task.model.Account

import com.revolut.task.exception.AccountNotFoundException

class AccountServiceTest extends Specification {

    AccountService service;  

    def setup() {
        service = new AccountService();
    }

    def "creates new account"() {
        when:
        def result = service.createAccount()

        then:
        result != null
        result instanceof Account
    }

    def "returns an account when requested"() {
        given:
        def id = service.createAccount().getId()

        when:
        def result = service.getAccount(id)

        then:
        result != null
        result instanceof Account
        result.getId() == id
    }

    def "deletes an account"() {
        given:
        def id = service.createAccount().getId();

        when:
        def result = service.deleteAccount(id)
        service.getAccount(result.getId())

        then:
        result != null
        result instanceof Account
        thrown AccountNotFoundException
    }

    def "updates an account"() {
        given:
        def id = service.createAccount().getId();

        when:
        def result = service.updateAccount(id, new BigDecimal(1))

        then:
        result != null
        result instanceof Account
        result.amount == new BigDecimal(1)
    }


}
